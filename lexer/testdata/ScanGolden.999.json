{
  "Input": "\n        # Mutation for testing different token types.\n        mutation {\n            createPost(\n                id: 1024\n                title: \"String Value\"\n                content: \"\"\"\n                    Hello,\n\n                        Welcome to GraphQL.\n                        Let's make this string a little bigger then. Because the larger this string\n                        becomes, the more efficient our lexer should look...\n\n                    From, Bucketd\n                \"\"\"\n                readTime: 2.742\n            ) @async(bar: $baz)\n        }\n    ",
  "Tokens": [
    {
      "Type": 2,
      "Literal": "mutation",
      "Position": 9,
      "Line": 3
    },
    {
      "Type": 1,
      "Literal": "{",
      "Position": 18,
      "Line": 3
    },
    {
      "Type": 2,
      "Literal": "createPost",
      "Position": 13,
      "Line": 4
    },
    {
      "Type": 1,
      "Literal": "(",
      "Position": 23,
      "Line": 4
    },
    {
      "Type": 2,
      "Literal": "id",
      "Position": 17,
      "Line": 5
    },
    {
      "Type": 1,
      "Literal": ":",
      "Position": 19,
      "Line": 5
    },
    {
      "Type": 3,
      "Literal": "1024",
      "Position": 21,
      "Line": 5
    },
    {
      "Type": 2,
      "Literal": "title",
      "Position": 17,
      "Line": 6
    },
    {
      "Type": 1,
      "Literal": ":",
      "Position": 22,
      "Line": 6
    },
    {
      "Type": 5,
      "Literal": "String Value",
      "Position": 24,
      "Line": 6
    },
    {
      "Type": 2,
      "Literal": "content",
      "Position": 17,
      "Line": 7
    },
    {
      "Type": 1,
      "Literal": ":",
      "Position": 24,
      "Line": 7
    },
    {
      "Type": 5,
      "Literal": "Hello,\n\n    Welcome to GraphQL.\n    Let's make this string a little bigger then. Because the larger this string\n    becomes, the more efficient our lexer should look...\n\nFrom, Bucketd",
      "Position": 26,
      "Line": 7
    },
    {
      "Type": 2,
      "Literal": "readTime",
      "Position": 17,
      "Line": 16
    },
    {
      "Type": 1,
      "Literal": ":",
      "Position": 25,
      "Line": 16
    },
    {
      "Type": 4,
      "Literal": "2.742",
      "Position": 27,
      "Line": 16
    },
    {
      "Type": 1,
      "Literal": ")",
      "Position": 13,
      "Line": 17
    },
    {
      "Type": 1,
      "Literal": "@",
      "Position": 15,
      "Line": 17
    },
    {
      "Type": 2,
      "Literal": "async",
      "Position": 16,
      "Line": 17
    },
    {
      "Type": 1,
      "Literal": "(",
      "Position": 21,
      "Line": 17
    },
    {
      "Type": 2,
      "Literal": "bar",
      "Position": 22,
      "Line": 17
    },
    {
      "Type": 1,
      "Literal": ":",
      "Position": 25,
      "Line": 17
    },
    {
      "Type": 1,
      "Literal": "$",
      "Position": 27,
      "Line": 17
    },
    {
      "Type": 2,
      "Literal": "baz",
      "Position": 28,
      "Line": 17
    },
    {
      "Type": 1,
      "Literal": ")",
      "Position": 31,
      "Line": 17
    },
    {
      "Type": 1,
      "Literal": "}",
      "Position": 9,
      "Line": 18
    },
    {
      "Type": 0,
      "Literal": "",
      "Position": 5,
      "Line": 19
    }
  ],
  "Errors": null
}